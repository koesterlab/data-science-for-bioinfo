[book]
authors = ["David Laehnemann"]
language = "en"
multilingual = false
src = "src"
title = "A collection of resources for data scientists (not only) in bioinformatics"

[preprocessor.open-on-gh]
command = "mdbook-open-on-gh"
renderer = ["html"]

[output.html]
# Required: Your repository URL used in the link.
git-repository-url = "https://github.com/koesterlab/data-science-for-bioinfo"

# The text to use in the footer.
# The link text is marked by `[]`
open-on-text = "Want to add or correct something? [Edit this page on GitHub.]"

[output.linkcheck]
# Should we check links on the internet? Enabling this option adds a
# non-negligible performance impact
follow-web-links = true

# The User-Agent to use when sending web requests
user-agent = "mdbook-linkcheck"

# How should warnings be treated?
#
# - "warn" will emit warning messages
# - "error" treats all warnings as errors, failing the linkcheck
# - "ignore" will ignore warnings, suppressing diagnostic messages and allowing
#   the linkcheck to continuing
warning-policy = "error"

# If necessary, you can exclude one or more links from being checked with a
# list of regular expressions. The regex will be applied to the link href (i.e.
# the `./index.html` in `[some page](./index.html)`) so it can be used to
# ignore both web and filesystem links.
#
# Hint: you can use TOML's raw strings (single quote) to avoid needing to
# escape things twice.
exclude = [
    # the respective links work in the browser, but linkcheck returns: Server returned 403 Forbidden for https://docs.github.com/en/get-started/quickstart/github-flow
    'https://docs\.github\.com/.*',
    # the respective links work in the browser, but linkcheck returns: Server returned 403 Forbidden for https://github.com/pricing#compare-features
    'https://github\.com/.*',
    # the respective link(s) work in the browser, but linkcheck return: 
    'https://www\.math\.utah\.edu/.*'
    ]

# Extra HTTP headers that must be send to certain web sites
# in order to link check to succeed.
#
# This is a dictionary (map), with keys being regexes
# matching a set of web sites, and values being an array of
# the headers.
[output.linkcheck.http-headers]
# Any hyperlink that contains this regexp will be sent
# the "Accept: text/html" header
'posit\.co' = ["Accept: text/html"]
